package selenium_April_22;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;

public class launch_firefox {

	public static void main(String[] args) throws Exception {
		
		System.setProperty("webdriver.gecko.driver","C:\\selenium_April_22\\Binary\\geckodriver.exe");
		
		WebDriver driver = new FirefoxDriver();
		
		driver.get("https://www.facebook.com");
		
		// Locator - id
		
	//	WebElement useremail =  driver.findElement(By.id("email"));
	//	WebElement password = driver.findElement(By.id("pass"));
		
		WebElement useremail =  driver.findElement(By.className("inputtext"));
		WebElement password = driver.findElement(By.id("pass"));
		
		// Locator tagname
		List<WebElement> links = driver.findElements(By.tagName("a"));
		System.out.println(links.size());
		if(links.size() !=0) {
			for(WebElement linkname : links ) {
				System.out.println(linkname.getText());
			}
		}
		// Locator - name
		
	//	WebElement loginBtn = driver.findElement(By.tagName("button"));
		
		useremail.sendKeys("utkarshaa_academy@gmail.com");
		password.sendKeys("123456543");
	//	loginBtn.click();
		
		// Locator LinkText
		
	//	WebElement FBPay = driver.findElement(By.linkText("Facebook Pay"));
	//	FBPay.click();
		
		// Partial link Text
		WebElement VIC = driver.findElement(By.partialLinkText("Voting Infor"));
		VIC.click();
		
		Thread.sleep(5000);
		
		driver.get("https://kite.zerodha.com/");
		
		WebElement userid = driver.findElement(By.id("userid"));
		WebElement password1 = driver.findElement(By.id("password"));
		
		// Locator - classname
		WebElement Login = driver.findElement(By.className("button-orange"));
		
		userid.sendKeys("XA0634");
		password1.sendKeys("12345676");
		Login.click();
		
	}

}
**********************************************************************************************************
String parent = driver.getWindowHandle();

Set<String> s= driver.getWindowHandles();

Iterator<String> I1=s.iterator();
while(I1.hasNext)
{
String Chile_window = I1.next();
	
if(!parent.equals(Chile_window))
{
	driver.switchTo().window(Child_window)
	system.out.println(driver.switchTo().window(Child_window).getTitle());
}	
}
*********************************************************************************

String parent = driver.getWindowHandle();

set<String> s= driver.getWindowHandles();

Iterator<String> itr = s.iterator();

while(itr.hasNext())
{
	String child_window = itr.next();

	if(!parent.equals(child_window))
{
	driver.switchTo().window(child_window)
 }
}
***********************************************************************
String parent = driver.getWindowHandle();

Set<String> s= driver.getWindowHandles();

Iterator<String> itr = s.iterator();

while(itr.hasNext())
{	
	String frame1 = s.next();

	if(!parent.equals(frame1))
{
	driver.switchTo().window(frame1)

}
}

********************************************************************
String parent = driver.getWindowHandle();

Set<String> s = driver.getWindowHandles();

Iterator I= s.iterator();

while(I.hasNext())
{
String window2 = i.next();
if(!parent.equals(window2))
{
driver.switchTo().window(window2);
system.out.println(driver.switchTo().window(window2).getTitle());
}

}

***************************************************************
String parent = driver.getWindowHandle()

Set<String> s= driver.getWindowHandles();

Iterator I=s.iterator();
while(I.hasNext())
{
String w2 = I.next();
if(!parent.equals(w2))
{
driver.switchTo.window(w2);
system.out.println(driver.switchTo().window(w2).getTitle());
}

}
***************************************************
String parent = driver.getWindowHandle();

Set<String> s= driver.getWindowHandles();

Iterator I= s.iterator();
while(I.hasNext)
{
	String fr2 = I.next();
if(!parent.equals(fr2))
{
	driver.switchTo().window(fr2);

system.out.println(driver.switchTo().window(fr2).getTitle());
}
}

**************************************************************

WEBDRIVEREVENT LISTNER METHOD
=============================
AFterAlertAccept
AfterAlertDismiss
AfterChangeValueOf
AfterClickon
AfterFindBy
AfterNavigateBAck
AfterNavigateForword
AfterNavigateRefresh
AfterNavigateTo
AfterScript

BeforeAlertAccept
BeforeAlertDissmiss
BeforeChangeValueof
BeforeClickOn
BeforeFindBy
BeforeNavigateBack
BeforeNavigateForword
BeforeNavigateRefresh
BeforeNavigateTo
BeforeScript

OnExecution

********************************************************************
public static void Startbrowser(String browser, String url)
{
	if(browser.equalsIgnoreCase("Chrome"))
{
System.setProperty("webdriver.chrome.driver", "path value")
driver = new ChromeDriver();
}
else if(browser.equalsIgnoreCase("Firefox"))
{
	System.setProperty("webdriver.gecko.driver", "path");
	driver = new ChromeDriver();
}




******************************************************************
WAP for ARMstrong No
=====================
public static void main(String args[])
{
int temp;
int rem, no=371, sum=0;

temp =num;

while(num>0)
{
rem=num%10;
sum=(int) (sum+Math.pow(rem,3)
num=num/10;

}
if(temp==sum)
{
syso(Armstrong No.)

}
else{
syso("Non Armstrong no")
}

}
****************************************************************************

1267900